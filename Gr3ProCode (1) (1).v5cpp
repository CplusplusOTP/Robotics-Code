{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor LeftFlywheelA = motor(PORT11, ratio18_1, true);\n\nmotor LeftFlywheelB = motor(PORT20, ratio18_1, false);\n\nmotor RightFlywheelA = motor(PORT1, ratio18_1, false);\n\nmotor RightFlywheelB = motor(PORT10, ratio18_1, true);\n\nmotor Puncher = motor(PORT5, ratio36_1, true);\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n\nusing namespace vex;\n\n  \ndouble speed = 50.0;\n\nvoid punch()\n{\n    Puncher.setVelocity(50,percent);\n    Puncher.spinFor(forward,1,turns);\n    wait(0.1, seconds);\n\n}\n\nvoid activate()\n{ \n    LeftFlywheelB.setVelocity(speed, percent);\n    LeftFlywheelA.setVelocity(speed, percent);\n    RightFlywheelB.setVelocity(speed, percent);\n    RightFlywheelA.setVelocity(speed, percent);\n\n    LeftFlywheelB.spin(forward);\n    LeftFlywheelA.spin(forward);\n    RightFlywheelB.spin(forward);\n    RightFlywheelA.spin(forward);\n}\n\nvoid activate2(int x)\n{ \n    LeftFlywheelB.setVelocity(x, percent);\n    LeftFlywheelA.setVelocity(x, percent);\n    RightFlywheelB.setVelocity(x, percent);\n    RightFlywheelA.setVelocity(x, percent);\n\n    LeftFlywheelB.spin(forward);\n    LeftFlywheelA.spin(forward);\n    RightFlywheelB.spin(forward);\n    RightFlywheelA.spin(forward);\n}\n\n\nvoid accelerate()\n{\n  int cycles = speed/5;\n  int currSpeed = 0;\n  if(speed < 0)\n  {\n  for(int count = 0; count > cycles; count--) \n    { \n        activate2(currSpeed);\n        wait(0.25,seconds);\n        currSpeed -= 5; \n    } \n  }\n  else\n  {\n  for(int count = 0; count < cycles; count++) \n    { \n        activate2(currSpeed);\n        wait(0.25,seconds);\n        currSpeed += 5; \n    } \n  }\n}\n\nvoid increase ()\n{\n    speed+=5.0;\n    wait(1,seconds);\n\n}\n\nvoid decrease ()\n{\n    speed-=5.0;\n    wait(1,seconds);\n\n}\n\nvoid stopSpin()\n{\n    LeftFlywheelA.setStopping(coast);\n    LeftFlywheelB.setStopping(coast);\n    RightFlywheelA.setStopping(coast);\n    RightFlywheelB.setStopping(coast);\n        LeftFlywheelA.stop();\n        LeftFlywheelB.stop();\n        RightFlywheelA.stop();\n        RightFlywheelB.stop();\n}\nvoid backward()\n{\n  speed *=-1;\n  wait(1,seconds);\n}\n\n\nint main() \n{ \n    while(true)\n    {\n\n        Controller1.ButtonUp.pressed(increase);\n        Controller1.ButtonDown.pressed(decrease);\n        Controller1.ButtonLeft.pressed(activate);\n        Controller1.ButtonA.pressed(accelerate);\n        Controller1.ButtonB.pressed(stopSpin);\n        Controller1.ButtonY.pressed(punch);\n        Controller1.ButtonX.pressed(backward);\n        Controller1.Screen.clearScreen();\n        Controller1.Screen.setCursor(1,1);\n        Controller1.Screen.print(\"Power: %2f\", speed);\n\n    }\n\n}\n","textLanguage":"cpp","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[11],"name":"LeftFlywheelA","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[20],"name":"LeftFlywheelB","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[1],"name":"RightFlywheelA","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[10],"name":"RightFlywheelB","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[5],"name":"Puncher","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}